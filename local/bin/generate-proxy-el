#!/usr/bin/env python3

import logging
import os
import pathlib
import urllib.parse

PROXY_EL_TEMPLATE = r""";;; Auto generated by generate-proxy-el

; Working with network proxies
; https://www.emacswiki.org/emacs/InstallingPackages
(setq url-proxy-services
      '(("no_proxy" . "^\\(localhost\\|10.*\\)")
        ("http" . "{hostname}:{port}")
        ("https" . "{hostname}:{port}")))
(setq url-http-proxy-basic-auth-storage
      (list (list "{hostname}:{port}"
                  (cons "Input your LDAP UID !"
                        (base64-encode-string "{username}:{password}")))))

; A workaround for emacs < 28.1
; https://stackoverflow.com/questions/10787087/use-elpa-emacs-behind-a-proxy-requiring-authentication
(when (version< emacs-version "28.1")
  (with-eval-after-load 'url-http
    (defun url-https-proxy-connect (connection)
      (setq url-http-after-change-function 'url-https-proxy-after-change-function)
      (process-send-string connection (format (concat "CONNECT %s:%d HTTP/1.1\r\n"
                              "Host: %s\r\n"
                              (let ((proxy-auth (let ((url-basic-auth-storage
                                           'url-http-proxy-basic-auth-storage))
                                      (url-get-authentication url-http-proxy nil 'any nil))))
                                (if proxy-auth (concat "Proxy-Authorization: " proxy-auth "\r\n")))
                              "\r\n")
                          (url-host url-current-object)
                          (or (url-port url-current-object)
                          url-https-default-port)
                          (url-host url-current-object))))))
"""  # noqa: E501


def main():
    logging.basicConfig(level=logging.INFO)
    logger = logging.getLogger("generate-proxy-el")

    http_proxy = os.getenv("http_proxy", "")
    res = urllib.parse.urlparse(http_proxy)
    if res.username and res.password:
        proxy_el = PROXY_EL_TEMPLATE.format(
            username=res.username,
            password=res.password,
            hostname=res.hostname,
            port=res.port,
        )
        proxy_el_path = pathlib.Path.home() / ".emacs.d" / "proxy.el"
        proxy_el_path.write_text(proxy_el)
        logger.info(
            "Generated network proxy configurations for Emacs: %s", proxy_el_path
        )


if __name__ == "__main__":
    main()
