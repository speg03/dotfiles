#!/usr/bin/env zsh

if [[ -n $1 ]]; then
    cd $1
fi

autoload -Uz vcs_info

zstyle ':vcs_info:*' enable git

zstyle ':vcs_info:git:*' formats \
       '%b #[fg=green]%c#[fg=red]%u#[default]%m'
zstyle ':vcs_info:git:*' actionformats \
       '%b #[fg=green]%c#[fg=red]%u#[default]%m#[fg=red]!%a#[default]'
zstyle ':vcs_info:git:*' check-for-changes true

zstyle ':vcs_info:git*+set-message:*' hooks \
       vcs-init git-untracked git-st vcs-green

+vi-vcs-init() {
    local in_git
    in_git=$(git rev-parse --is-inside-work-tree 2>/dev/null)
    if [[ $in_git != 'true' ]]; then
        # skip other hooks
        return 1
    fi
    hook_com[misc]=''
}

+vi-git-untracked() {
    if git status --porcelain | grep '^??' &>/dev/null; then
        hook_com[misc]+="#[fg=yellow]?#[default]"
    fi
}

+vi-git-st() {
    local ahead behind
    local -a gitstatus

    ahead=$(git rev-list ${hook_com[branch]}@{upstream}..HEAD 2>/dev/null \
                | wc -l | awk '{print $1}')
    (( $ahead )) && gitstatus+=( "+${ahead}" )

    behind=$(git rev-list HEAD..${hook_com[branch]}@{upstream} 2>/dev/null \
                 | wc -l | awk '{print $1}')
    (( $behind )) && gitstatus+=( "-${behind}" )

    if [[ ${#gitstatus[@]} -gt 0 ]]; then
        hook_com[misc]+="#[fg=magenta][${(j:/:)gitstatus}]#[default]"
    fi
}

+vi-vcs-green() {
    if [[ -z ${hook_com[staged]} && -z ${hook_com[unstaged]} &&
              -z ${hook_com[misc]} && -z ${hook_com[action]} ]]; then
        hook_com[misc]=$'#[fg=green]\U2714#[default]'
    fi
}


pane_status="%40<...<%~%<<"

LANG=en_US.UTF-8 vcs_info
if [[ -n $vcs_info_msg_0_ ]]; then
    git_status="#[fg=cyan]git:${vcs_info_msg_0_}#[default]"
    sep=$'#[fg=brightblack]\UE0B1#[default]'
    pane_status="${pane_status} ${sep} ${git_status}"
fi

print -P "${pane_status}"
